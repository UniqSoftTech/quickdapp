name: Deploy Backend to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  PORT: ${{ secrets.BACKEND_PORT }}
  BLOCKSCOUT_URL: ${{ secrets.BLOCKSCOUT_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Generate deployment package
      run: |
        cd backend
        zip -r deploy.zip . -x "*.git*" "node_modules/*"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Check AWS S3 permissions
      run: |
        aws s3 ls
        if [ $? -ne 0 ]; then
          echo "Error: Unable to list S3 buckets. Please check AWS permissions."
          exit 1
        fi

    - name: Check if Elastic Beanstalk application exists
      run: |
        if ! aws elasticbeanstalk describe-applications --application-names quickdapp > /dev/null 2>&1; then
          echo "Application 'quickdapp' not found. Creating it..."
          aws elasticbeanstalk create-application --application-name quickdapp
        else
          echo "Application 'quickdapp' already exists."
        fi

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: quickdapp
        environment_name: Quickdapp-env
        version_label: ${{ github.sha }}
        region: us-east-1
        deployment_package: backend/deploy.zip
        environment_variables: PORT=${{ env.PORT }},BLOCKSCOUT_URL=${{ env.BLOCKSCOUT_URL }}
      continue-on-error: true
      id: deploy

    - name: Check deployment status
      if: steps.deploy.outcome == 'failure'
      run: |
        echo "Deployment failed. Checking Elastic Beanstalk logs..."
        aws elasticbeanstalk describe-events --environment-name Quickdapp-env --output text
        exit 1
